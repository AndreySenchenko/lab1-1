//
//  main.cpp
//  LabWork1.1
//
//  Created by Andrey on 10/22/19.
//  Copyright © 2019 Andrey. All rights reserved.
//

//Лабораторна робота 1-1. Точка та контур
//Умова задачі
//Версія 1 («точка та зафіксований контур»)
//Визначити, чи лежить точка площини всередині контуру, на контурі, або зовні його. Контур (див. варіанти нижче) задається параметром a = 10, точка – парою дійсних координат (x, y). Вхідні дані, а саме, пару координат точки, задає користувач за допомогою клавіатури.
// 13.    Трикутник: (0,–a), (a,0), (0,a).

//Вимоги до виконання:

//1. Програма складається з шести функцій – головної та п’яти допоміжних:
//    виведення даних про автора aboutA,
//    введення точки getP,
//    виведення точки putP,
//    визначення розташування whereP,
//    обробки точки processP.
//
//2. У головній функції означено змінні для параметра контуру та координат точки. Головна функція містить виклики функцій aboutA, getP, processP.
//3. Функція aboutA (без параметрів) виводить у першому рядку назву роботи, у другому номер групи, прізвище та ім’я автора програми через пробіл.
//4. Функція getP має два параметри-посилання, за допомогою яких передає дійсні координати точки. Повертає ознаку успішного введення координат.
//5. Функція putP виводить координати точки у вигляді (x;y).
//6. Функція whereP повертає ознаку розташування –1, 0, або 1, якщо, відповідно, точка всередині контуру, на контурі, або за межами контуру.
//7. Функція processP викликає функцію putP, виводить одне з повідомлень IN_C, ON_C, OUT_C («всередині контуру», «на контурі», «за межами контуру») та значення параметра контуру.
//8. На початку програми записати прототипи функцій, далі головну функцію, далі – решту функцій.
//9. Програма здається разом з аркушем паперу в клітинку, який містить рисунок з контуром та точками, на яких студент перевіряв роботу програми, а також табличку, в якій записано координати цих точок та відповідні їм вихідні дані, які має виводити програма.
//Програми, в яких є глобальні змінні або які не виводять запрошень до введення або виводять повідомлення, відмінні від зазначених, будуть відправлятися на доробку! Це саме стосується й подальших версій.

#include <iostream>

using namespace std;

//      1. Програма складається з шести функцій – головної та п’яти допоміжних

void aboutA();                                  // виведення даних про автора
bool getP(double &x, double &y);                // введення точки
void putP(double x, double y);                  // виведення точки
int  whereP(double x, double y,  double a);     // визначення розташування
void processP(double x, double y, double a);    // обробки точки

int main() {
    //    2. У головній функції означено змінні для параметра контуру та координат точки.
    //       Головна функція містить виклики функцій aboutA, getP, processP.
    
    double a = 10; // Контур задається параметром a = 10, точка – парою дійсних координат (x, y)
    double x;
    double y;
    
    aboutA();
    int res = getP(x, y);
    
    if (res != 0) {
        cout << "Помилка введення, координати були введені невірно" << endl;
        return 1;
    }
    processP(x, y, a);
    
    return 0;
}

void aboutA() {
    
    //    виведення даних про автора
    //
    //    3. Функція aboutA (без параметрів) виводить
    //       у першому рядку назву роботи,
    //         у другому номер групи, прізвище та ім’я автора програми через пробіл.
    
    cout << "Лабораторна робота 1-1. \"Точка та контур\"" << endl;
    cout << "Група №K-16" << " " << "Сенченко Андрій" << endl;
    
}

bool getP(double &x, double &y) {
    //    введення точки
    //
    //    4. Функція getP має два параметри-посилання,
    //    за допомогою яких передає дійсні координати точки.
    //    Повертає ознаку успішного введення координат.
    
    cout << "Введіть, будь ласка, координату x: ";
    cin >> x;
    cout << "Введіть, будь ласка, координату y: ";
    cin >> y;
    
    if ((x && y)||(x == 0) || (y == 0)) return 0;
    else return 1;
    
}
void putP(double x, double y) {
    //    виведення точки
    //
    //    5. Функція putP виводить координати точки у вигляді (x;y).
    
    cout << endl << "Kоординати точки (x, y): (" << x << ", " << y << ")" << endl;
    
}



int whereP(double x, double y, double a) {
    //      визначення розташування
    //
    //      6. Функція whereP повертає ознаку розташування
    //      –1, 0, або 1, якщо, відповідно, точка всередині контуру,
    //      на контурі, або за межами контуру.
    
    //    13.    Трикутник: (0,–a), (a,0), (0,a). a  = 10
    if ((x < 0) || (x > a) || (y > a) || (y < -a) || (x + y > a) || (y < x - a)){
        return 1;
    } else if (((x > 0) && (x < a)) && ((y < a) && (y > -a)) && ((x + y < a) && (y > x - a))){
        return -1;
    } else {
        return 0;
    }
}

void processP(double x, double y, double a){
    
    //      обробки точки
    //
    //      7. Функція processP викликає функцію putP, виводить одне з повідомлень
    //      IN_C, ON_C, OUT_C («всередині контуру», «на контурі», «за межами контуру»)
    //      та значення параметра контуру.
    
    string  IN_C = "всередині контуру";
    string  ON_C = "на контурі";
    string OUT_C = "за межами контуру";
    
    putP(x, y);
    
    int res = whereP(x, y, a);
    
    cout << "Точка знаходиться ";
    
    switch (res) {
        case  0: cout << ON_C  << endl;  break;
        case  1: cout << OUT_C << endl;  break;
        default: cout << IN_C  << endl;  break;
    }
    cout << "Значення параметра контуру (a) = "  <<  a << endl;
    
}
